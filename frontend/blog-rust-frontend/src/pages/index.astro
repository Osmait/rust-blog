---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import { ListOfPost } from "../components/ListOfPost";
import { Post } from "../components/Post";
interface Post {
  id: string;
  name: string;
  description: string;
  img: string;
}
const response = await fetch("http://127.0.0.1:8080/");

const result: Post[] = await response.json();
---

<Layout title="Welcome to Astro.">
  <main class="transition-all duration-500">
    <h1>My Blog</h1>
    <div class="flex justify-start flex-col items-start">
      <h2>Ultimos Post</h2>
      <!-- <Post client:visible transition:name="post" /> -->
      {
        result.map((post: Post) => (
          <article>
            <a
              href={`post/${post.id}`}
              class="flex  justify-center items-center flex-row"
            >
              <img
                class="w-28 "
                src={post.img}
                transition:name={`playlist ${post?.id} image`}
              />

              <h2 class="text-white" transition:name={`post-${post.id}`}>
                {post.name}
              </h2>
            </a>
          </article>
        ))
      }
    </div>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }
  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
  }
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
</style>
